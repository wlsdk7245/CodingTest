## # 문자열 다루기 기본
**\[문제 설명\]**

문자열 s의 길이가 4 혹은 6이고, 숫자로만 구성돼있는지 확인해주는 함수, solution을 완성하세요. 예를 들어 s가a234이면 False를 리턴하고1234라면 True를 리턴하면 됩니다.

**\[제한 사항\]**

-   s는 길이 1 이상, 길이 8 이하인 문자열입니다.

**\[입출력 예\]**

<table style="border-collapse: collapse; width: 100%; height: 57px;" border="1" data-ke-style="style1"><tbody><tr style="height: 19px;"><td style="height: 19px;">s</td><td style="height: 19px;">return</td></tr><tr style="height: 19px;"><td style="height: 19px;">a234</td><td style="height: 19px;">false</td></tr><tr style="height: 19px;"><td style="height: 19px;">1234</td><td style="height: 19px;">true</td></tr></tbody></table>

**\[제출\]**

```
#include <string>
#include <vector>
using namespace std;

bool solution(string s) {
    bool answer = true;
    if(s.size()!=4 && s.size()!=6){
        return false;
    }
    for(int i : s){
        if(i<48 || i>57){
            return false;
        }
    }
    return answer;
}
```

제일 먼저, 문자열 s의 길이를 구해서 4나 6이 아닌 경우, false를 리턴한다. 원래 answer에 bool값을 넣으려 했는데, 그렇게 하면 사이즈가 틀린 경우에도 for문을 돌려서 비효율적인 것 같아서 바로 리턴을 했다. 그 다음 for문을 보면 먼저 0의 ASCII값이 48이고 9의 ASCII값이 57이기 때문에 0미만, 9초과인 경우 false를 리턴하게끔 했다.

for(int i: s)는 범위기반 for문으로 python에서 내가 가장 좋아했던 기능이다! c++에도 있어서 애용하는 중이다.
<br>